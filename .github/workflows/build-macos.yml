name: Build macOS Application

on:
  push:
    branches: [ "master", "main" ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.6.0'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies from requirements.txt
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build the C++ application
        run: |
          qmake CONFIG+=release
          make

      # Nowy, inteligentny krok: Znajdź, gdzie została zbudowana aplikacja .app
      - name: Find the .app bundle
        id: find_app # Nadajemy temu krokowi ID, aby odwołać się do jego wyniku
        run: |
          # Znajdź ścieżkę do pliku .app i zapisz ją jako "output" dla kolejnych kroków
          APP_PATH=$(find . -name "*.app" -print -quit)
          echo "App bundle found at: $APP_PATH"
          # Ustaw zmienną wyjściową, której można użyć w innych krokach
          echo "app_path=$APP_PATH" >> "$GITHUB_OUTPUT"
      
      # Od teraz używamy ścieżki znalezionej w poprzednim kroku
      - name: Package Qt libraries into the .app bundle
        run: macdeployqt "${{ steps.find_app.outputs.app_path }}"

      - name: Embed Python and Scripts into the .app bundle
        run: |
          # Pobierz ścieżkę ze zmiennej wyjściowej kroku 'find_app'
          APP_PATH="${{ steps.find_app.outputs.app_path }}"
          echo "App bundle path is: $APP_PATH"

          echo "Creating target directories inside the .app bundle..."
          mkdir -p "$APP_PATH/Contents/Resources/"

          echo "Copying scripts folder..."
          cp -R scripts/ "$APP_PATH/Contents/Resources/scripts"

          echo "Locating and copying Python installation..."
          PY_INSTALL_DIR=$(dirname $(dirname $(which python)))
          echo "Python installation found at: $PY_INSTALL_DIR"
          cp -R "$PY_INSTALL_DIR" "$APP_PATH/Contents/Resources/python"

      - name: Create final DMG from the completed .app bundle
        run: macdeployqt "${{ steps.find_app.outputs.app_path }}" -dmg

      - name: Upload final DMG as a build artifact
        uses: actions/upload-artifact@v4
        with:
          name: PythonRunner-macOS
          # Znajdź plik .dmg, który macdeployqt stworzy w głównym folderze
          path: "*.dmg"

